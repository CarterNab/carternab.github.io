[
  {
    "objectID": "posts/the-downfall-of-the-royals/index.html",
    "href": "posts/the-downfall-of-the-royals/index.html",
    "title": "The downfall of the 2015 World Series Champions, The Kansas City Royals",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\n\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.3.6     ✔ purrr   0.3.4\n✔ tibble  3.1.8     ✔ dplyr   1.0.9\n✔ tidyr   1.2.0     ✔ stringr 1.4.1\n✔ readr   2.1.2     ✔ forcats 0.5.2\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\n\nCode\npitching15 <- read_csv(\"pitchingdata2015.csv\") %>% mutate(Season = 2015)\n\n\nRows: 30 Columns: 36\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (1): Tm\ndbl (35): #P, PAge, RA/G, W, L, W-L%, ERA, G, GS, GF, CG, tSho, cSho, SV, IP...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\npitching16 <- read_csv(\"pitchingdata2016.csv\") %>% mutate(Season = 2016)\n\n\nRows: 30 Columns: 36\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (1): Tm\ndbl (35): #P, PAge, RA/G, W, L, W-L%, ERA, G, GS, GF, CG, tSho, cSho, SV, IP...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\npitching17 <- read_csv(\"pitchingdata2017.csv\") %>% mutate(Season = 2017)\n\n\nRows: 30 Columns: 36\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (1): Tm\ndbl (35): #P, PAge, RA/G, W, L, W-L%, ERA, G, GS, GF, CG, tSho, cSho, SV, IP...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\npitching18 <- read_csv(\"pitchingdata2018.csv\") %>% mutate(Season = 2018)\n\n\nRows: 30 Columns: 36\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (1): Tm\ndbl (35): #P, PAge, RA/G, W, L, W-L%, ERA, G, GS, GF, CG, tSho, cSho, SV, IP...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\npitching19 <- read_csv(\"pitchingdata2019.csv\") %>% mutate(Season = 2019)\n\n\nRows: 30 Columns: 36\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (1): Tm\ndbl (35): #P, PAge, RA/G, W, L, W-L%, ERA, G, GS, GF, CG, tSho, cSho, SV, IP...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\npitching20 <- read_csv(\"pitchingdata2020.csv\") %>% mutate(Season = 2020)\n\n\nRows: 30 Columns: 36\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (1): Tm\ndbl (35): #P, PAge, RA/G, W, L, W-L%, ERA, G, GS, GF, CG, tSho, cSho, SV, IP...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\npitching21 <- read_csv(\"pitchingdata2021.csv\") %>% mutate(Season = 2021)\n\n\nRows: 30 Columns: 36\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (1): Tm\ndbl (35): #P, PAge, RA/G, W, L, W-L%, ERA, G, GS, GF, CG, tSho, cSho, SV, IP...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\npitching22 <- read_csv(\"pitchingdata2022.csv\") %>% mutate(Season = 2022)\n\n\nRows: 30 Columns: 36\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (1): Tm\ndbl (35): #P, PAge, RA/G, W, L, W-L%, ERA, G, GS, GF, CG, tSho, cSho, SV, IP...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\npitching <- bind_rows(pitching15, pitching16, pitching17, pitching18, pitching19, pitching20, pitching21, pitching22)\n\n\npitching chart post\n\n\nCode\nyalsP<- pitching %>% \n  filter(Tm ==\"Kansas City Royals\") \n  averageERA<- pitching %>% \n    group_by(Season) %>% summarise(mean_ERA=mean(ERA))\nggplot() + \n  geom_line(data=pitching, aes(x=Season, y=ERA, group=Tm), color=\"light grey\") +\n  geom_line(data=yalsP, aes(x=Season, y=ERA), color=\"blue\") +\n  geom_line(data=averageERA, aes(x=Season, y=mean_ERA), color=\"black\") +\n  scale_y_continuous(limits = c(2, 6)) +\nlabs(\n    x=\"Year\", \n    y=\"ERA\", \n    title=\"Royals Pitching Has Suffered Since Winning It All\", \n    subtitle=\"KC's Average ERA isn't stacking up against the competition\", \n    caption=\"Source: Sports-Reference | By Carter Nab\"\n    ) +\n  theme_minimal() +\n  theme(\n      plot.title = element_text(size = 20, face = \"bold\"),\n    axis.title = element_text(size = 14), \n    plot.subtitle = element_text(size=12), \n    panel.grid.minor = element_blank(),\n    plot.title.position = \"plot\"\n    ) \n\n\n\n\n\n\n\nCode\nlibrary(tidyverse)\n\nfielding15 <- read_csv(\"fieldingdata2015.csv\") %>% mutate(Season = 2015)\n\n\nRows: 30 Columns: 19\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (1): Tm\ndbl (18): #Fld, RA/G, DefEff, G, GS, CG, Inn, Ch, PO, A, E, DP, Fld%, Rtot, ...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\nfielding16 <- read_csv(\"fieldingdata2016.csv\") %>% mutate(Season = 2016)\n\n\nRows: 30 Columns: 19\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (1): Tm\ndbl (18): #Fld, RA/G, DefEff, G, GS, CG, Inn, Ch, PO, A, E, DP, Fld%, Rtot, ...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\nfielding17 <- read_csv(\"fieldingdata2017.csv\") %>% mutate(Season = 2017)\n\n\nRows: 30 Columns: 19\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (1): Tm\ndbl (18): #Fld, RA/G, DefEff, G, GS, CG, Inn, Ch, PO, A, E, DP, Fld%, Rtot, ...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\nfielding18 <- read_csv(\"fieldingdata2018.csv\") %>% mutate(Season = 2018)\n\n\nRows: 30 Columns: 19\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (1): Tm\ndbl (18): #Fld, RA/G, DefEff, G, GS, CG, Inn, Ch, PO, A, E, DP, Fld%, Rtot, ...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\nfielding19 <- read_csv(\"fieldingdata2019.csv\") %>% mutate(Season = 2019)\n\n\nRows: 30 Columns: 19\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (1): Tm\ndbl (18): #Fld, RA/G, DefEff, G, GS, CG, Inn, Ch, PO, A, E, DP, Fld%, Rtot, ...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\nfielding20 <- read_csv(\"fieldingdata2020.csv\") %>% mutate(Season = 2020)\n\n\nRows: 30 Columns: 19\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (1): Tm\ndbl (18): #Fld, RA/G, DefEff, G, GS, CG, Inn, Ch, PO, A, E, DP, Fld%, Rtot, ...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\nfielding21 <- read_csv(\"fieldingdata2021.csv\") %>% mutate(Season = 2021)\n\n\nRows: 30 Columns: 19\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (1): Tm\ndbl (18): #Fld, RA/G, DefEff, G, GS, CG, Inn, Ch, PO, A, E, DP, Fld%, Rtot, ...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\nfielding22 <- read_csv(\"fieldingdata2022.csv\") %>% mutate(Season = 2022)\n\n\nRows: 30 Columns: 19\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (1): Tm\ndbl (18): #Fld, RA/G, DefEff, G, GS, CG, Inn, Ch, PO, A, E, DP, Fld%, Rtot, ...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\nfielding <- bind_rows(fielding15, fielding16, fielding17, fielding18, fielding19, fielding20, fielding21, fielding22)\n\n\nfielding chart post\n\n\nCode\nyalsD<- fielding %>% \n  filter(Tm ==\"Kansas City Royals\")\naverageDefEff<- fielding %>% \n    group_by(Season) %>% \n  summarise(mean_DefEff=mean(DefEff))\nggplot() + \n  geom_line(data=fielding, aes(x=Season, y=DefEff, group=Tm), color=\"light grey\") +\n  geom_line(data=yalsD, aes(x=Season, y=DefEff), color=\"blue\") +\n  geom_line(data=averageDefEff, aes(x=Season, y=mean_DefEff), color=\"black\") +\n  labs(\n    x=\"Year\", \n    y=\"Defensive Efficiency\", \n    title=\"Royals Defense is Below Average Since 2015\", \n    subtitle=\"KC's Defense needs some help if they want to ever make it to the playoffs again\",\n    caption=\"Source: Sports-Reference | By Carter Nab\"\n    ) +\n  theme_minimal() +\n  theme(\n      plot.title = element_text(size = 20, face = \"bold\"),\n    axis.title = element_text(size = 14), \n    plot.subtitle = element_text(size=12), \n    panel.grid.minor = element_blank(),\n    plot.title.position = \"plot\"\n    ) \n\n\n\n\n\n\n\nCode\nlibrary(tidyverse)\n\nbatting15 <- read_csv(\"battingdata2015.csv\") %>% mutate(Season = 2015)\n\n\nRows: 30 Columns: 29\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (1): Tm\ndbl (28): #Bat, BatAge, R/G, G, PA, AB, R, H, 2B, 3B, HR, RBI, SB, CS, BB, S...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\nbatting16 <- read_csv(\"battingdata2016.csv\") %>% mutate(Season = 2016)\n\n\nRows: 30 Columns: 29\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (1): Tm\ndbl (28): #Bat, BatAge, R/G, G, PA, AB, R, H, 2B, 3B, HR, RBI, SB, CS, BB, S...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\nbatting17 <- read_csv(\"battingdata2017.csv\") %>% mutate(Season = 2017)\n\n\nRows: 30 Columns: 29\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (1): Tm\ndbl (28): #Bat, BatAge, R/G, G, PA, AB, R, H, 2B, 3B, HR, RBI, SB, CS, BB, S...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\nbatting18 <- read_csv(\"battingdata2018.csv\") %>% mutate(Season = 2018)\n\n\nRows: 30 Columns: 29\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (1): Tm\ndbl (28): #Bat, BatAge, R/G, G, PA, AB, R, H, 2B, 3B, HR, RBI, SB, CS, BB, S...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\nbatting19 <- read_csv(\"battingdata2019.csv\") %>% mutate(Season = 2019)\n\n\nRows: 30 Columns: 29\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (1): Tm\ndbl (28): #Bat, BatAge, R/G, G, PA, AB, R, H, 2B, 3B, HR, RBI, SB, CS, BB, S...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\nbatting20 <- read_csv(\"battingdata2020.csv\") %>% mutate(Season = 2020)\n\n\nRows: 30 Columns: 29\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (1): Tm\ndbl (28): #Bat, BatAge, R/G, G, PA, AB, R, H, 2B, 3B, HR, RBI, SB, CS, BB, S...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\nbatting21 <- read_csv(\"battingdata2021.csv\") %>% mutate(Season = 2021)\n\n\nRows: 30 Columns: 29\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (1): Tm\ndbl (28): #Bat, BatAge, R/G, G, PA, AB, R, H, 2B, 3B, HR, RBI, SB, CS, BB, S...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\nbatting22 <- read_csv(\"battingdata2022.csv\") %>% mutate(Season = 2022)\n\n\nRows: 30 Columns: 29\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (1): Tm\ndbl (28): #Bat, BatAge, R/G, G, PA, AB, R, H, 2B, 3B, HR, RBI, SB, CS, BB, S...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\nbatting <- bind_rows(batting15, batting16, batting17, batting18, batting19, batting20, batting21, batting22)\n\n\nBatting Chart\n\n\nCode\nyalsO<- batting %>% \n  filter(Tm ==\"Kansas City Royals\")\naverageBA<- batting %>% \n    group_by(Season) %>% \n  summarise(mean_BattingAVG=mean(BA))\nggplot() + \n  geom_line(data=batting, aes(x=Season, y=BA, group=Tm), color=\"light grey\") +\n  geom_line(data=yalsO, aes(x=Season, y=BA), color=\"blue\") +\n  geom_line(data=averageBA, aes(x=Season, y=mean_BattingAVG), color=\"black\") +\n  labs(\n    x=\"Year\", \n    y=\"Batting Average\", \n    title=\"Royals Batting Average Is Heading In The Wrong Direction\", \n    subtitle=\"KC's front office should invest in some better hitters if they want to be relevant again\",\n    caption=\"Source: Sports-Reference | By Carter Nab\"\n    ) +\n  theme_minimal() +\n  theme(\n      plot.title = element_text(size = 19, face = \"bold\"),\n    axis.title = element_text(size = 14), \n    plot.subtitle = element_text(size=12), \n    panel.grid.minor = element_blank(),\n    plot.title.position = \"plot\"\n    )"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Carter’s Blog",
    "section": "",
    "text": "royals\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nApr 11, 2022\n\n\nCarter Nab\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  }
]